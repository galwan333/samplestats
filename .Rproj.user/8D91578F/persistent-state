build-last-errors="[]"
build-last-errors-base-dir=""
build-last-outputs="[]"
compile_pdf_state="{\"tab_visible\":false,\"running\":false,\"target_file\":\"\",\"output\":\"\",\"errors\":[]}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"e1g4ixy05s3npyxc\",\"input\":\"#\",\"path\":\"~/samplestats\",\"regex\":false,\"ignoreCase\":true,\"results\":{\"file\":[\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/central_moments.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/coefficient_variation.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/iqr.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/mode.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/moments.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\",\"~/samplestats/R/percentiles.R\"],\"line\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,27,33,36,43,48,54,57,60,65,68,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,22,25,28,34,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,20,27,36,39,42,45,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,24,29,35,38,45,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,27,32,35,39,46,50,54,56,60],\"lineValue\":[\"# Central moment calculator function\",\"#\",\"# @description\",\"# This is a function that computes a given moment based off user input (first moment by default)\",\"# @details\",\"# calculations are self-explanatory (see comments below), but we must ensure that the parameters are appropriate otherwise an error will be thrown\",\"#\",\"# @return The calculated moment in the form of a numeric value\",\"#\",\"# @param data Is a list/vector of only numeric values\",\"# @param moment Is the given moment that will be calculated (1 = first moment, 2= second moment, etc.) and is 1 if no parameter is passed\",\"#\",\"# @examples\",\"# central_moments(c(2,3,4,5,1,2,3,44,5,55,100,100))\",\"# central_moments(c(2,3,4,5,1,2,3,44,5,55,100,100), 4)\",\"#\",\"# @export\",\"#\",\"#ensures there is data being passed through\",\"#ensures the moment is non-negative (and not zero) and makes sure the moment parameter is a whole number\",\"#number of observations in the data\",\"#ensures all of the data is numeric (this package only deals with numeric data)\",\"#makes sure there are enough observations to calculate the given central moment\",\"#by definition, the first central moment is 0\",\"#gets the mean of the data\",\"#initializes new variable for helping calculate the \\\"denominator\\\" correction factor\",\"#calculates the \\\"denominator\\\" ( = (n-1)*(n-2)*...*(n-moment-1))\",\"# finds correction factor (= n^moment/\\\"denominator\\\")\",\"# finds the central moment\",\"# Coefficient of variation calculator function\",\"#\",\"# @description\",\"# This is a function that calculates the coefficient of variation (sd/mean * 100) of a list of data\",\"#\",\"# @details\",\"# calculations are self-explanatory (see comments below), but we must ensure that the parameters are appropriate otherwise an error will be thrown\",\"#\",\"# @return The calculated coefficient of variation\",\"#\",\"# @param data Is a list/vector of only numeric values\",\"#\",\"# @examples\",\"# coefficient_of_variation(c(1:100))\",\"#\",\"# @export\",\"#\",\"#since we are calling other functions within this package, we don't need to duplicate code to check for errors\",\"#uses moments function within this package to find the mean\",\"#uses central moments function within this package to find the sample variance\",\"#ensures the mean isn't 0\",\"#calculates coefficient of variation in terms of a percentage\",\"# IQR calculator function\",\"#\",\"# @description\",\"# This is a function finds the IQR of the data\",\"# @details\",\"# We call the \\\"percentiles\\\" function within this package to find the iqr = 3rd quantile - 1st quantile\",\"#\",\"# @return The IQR of the data which is a numerical value\",\"#\",\"# @param data Is a list/vector of only numeric values\",\"#\",\"# @examples\",\"# iqr(c(4,5,3,7,6,4,33,2,3,4))\",\"#\",\"# @export\",\"#\",\"#since we are calling other functions within this package, we don't need to duplicate code to check for errors\",\"#uses percentiles function within this back to find the iqr\",\"# Mode finder function\",\"#\",\"# @description\",\"# This is a function that finds the mode (the most frequent observation(s)) of a list of data\",\"#\",\"# @details\",\"# calculations are self-explanatory (see comments below), but we must ensure that the parameters are appropriate otherwise an error will be thrown\",\"#\",\"# @return The calculated moment in the form of a numeric value\",\"#\",\"# @param data Is a list/vector of only numeric values\",\"#\",\"# @examples\",\"# mode(c(1,2,3,3,1,3,44,6))\",\"#\",\"# @export\",\"#\",\"#ensures there is data being passed through\",\"#ensures all of the data is numeric (this package only deals with numeric data)\",\"#creates a table of number of observations per unique value\",\"#indicates the the maximum number of observations amongst the unique values is\",\"#sorts the original data in numeric order\",\"#extracts all of the mode(s) from the data\",\"# Moment calculator function\",\"#\",\"# @description\",\"# This is a function that computes a given moment based off user input (first moment by default)\",\"# @details\",\"# calculations are self-explanatory (see comments below), but we must ensure that the parameters are appropriate otherwise an error will be thrown\",\"#\",\"# @return The calculated moment in the form of a numeric value\",\"#\",\"# @param data Is a list/vector of only numeric values\",\"# @param moment Is the given moment that will be calculated (1 = first moment, 2= second moment, etc.) and is 1 if no parameter is passed\",\"#\",\"# @examples\",\"# moments(c(2,3,4,5,1,2,3,44,5,55,100,100))\",\"# moments(c(2,3,4,5,1,2,3,44,5,55,100,100), 4)\",\"#\",\"# @export\",\"#\",\"#ensures there is data being passed through\",\"#ensures that the value of the moment parameter is valid\",\"#number of observations in the data\",\"#ensures all of the data is numeric (this package only deals with numeric data)\",\"#finds the value of the corresponding moment based off the parameter\",\"# Percentile finder function\",\"#\",\"# @description\",\"# This is a function find a given percentile based off the users inputted data\",\"# @details\",\"# calculations are self-explanatory (see comments below), but we must ensure that the parameters are appropriate otherwise an error will be thrown\",\"#\",\"# @return The numerical value of the percentile\",\"#\",\"# @param data Is a list/vector of only numeric values\",\"# @param percentile Is the percentile in the data that we want to find and is 0.5 (median) if no parameter is passed\",\"#\",\"# @examples\",\"# percentiles(c(2:200))\",\"# percentiles(c(2:200), 0.9)\",\"#\",\"# @export\",\"#\",\"#ensures there is enough data being passed through\",\"#ensures the percentile value is valid\",\"#sorts the data in numeric order\",\"#gets the number of observations in the data\",\"#ensures all of the data is numeric (this package only deals with numeric data)\",\"#index of the percentile within the sorted data\",\"#if the index is a whole number simply return the corresponding value in the sorted list\",\"#if the index is a decimal\",\"#find the whole number indices above and below the percentile index\",\"#finds the value of the corresponding percentile within the sorted data\"],\"matchOnmatchOffreplaceMatchOn\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],\"replaceMatchOff\":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},\"running\":false,\"replace\":false,\"preview\":false,\"gitFlag\":true,\"replacePattern\":\"\"}"
imageDirtyState="1"
saveActionState="-1"
